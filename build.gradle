plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.microservice.cyz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}



allprojects {

	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'idea'
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
		}
	}

	repositories {
		mavenCentral()
	}
	
	dependencies {
		
//		implementation 'org.projectlombok:lombok:1.18.4'
		// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
		compileOnly "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
		// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
		compileOnly "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"

		compile group: 'org.apache.commons.io', name: 'commonsIO', version: '2.5.0'
		
		implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.10.RELEASE'

		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-aop'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
		implementation 'org.projectlombok:lombok'
		runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
		runtimeOnly 'mysql:mysql-connector-java'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}

subprojects {

	if (it.name.endsWith("-api") || it.name.endsWith("common") || it.name.endsWith("-impl") ) {
		dependencies {

			implementation 'org.springframework.boot:spring-boot-starter-validation'
			implementation 'com.alibaba:fastjson:1.2.72'

		}
	}

	if (it.name.endsWith("-api") || it.name.endsWith("common")) {
		dependencies {
//			compileOnly 'org.springframework.cloud:spring-cloud-starter-openfeign'

			compile "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jVersion}"
//
//			compile "com.zjft.microservice:zj-commons-config:${zjInfrastructureVersion}"
//			compile "com.zjft.microservice:zj-commons-api:${zjInfrastructureVersion}"
		}
	}

	if (it.name.endsWith("-impl") || it.name.endsWith("common")) {
		dependencies {
			compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

			// jdbc
			compile "org.springframework.boot:spring-boot-starter-jdbc"
			// 数据库驱动
			// compile group: 'oracle', name: 'ojdbc6', version: '11.2.0.3'
			compile 'mysql:mysql-connector-java:5.1.49'

			// redis
			compile "org.springframework.boot:spring-boot-starter-data-redis"
			compile "org.apache.commons:commons-pool2"

			// mapstruct
			compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
			annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
			implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
			

			// https://mvnrepository.com/artifact/com.github.houbb/junitperf
			compile group: 'com.github.houbb', name: 'junitperf', version: '2.0.0'

			// mybatis
			implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMybatisVersion}"
		}
	}
	
	if (it.name.endsWith("-api")) {
		dependencies {
			compile project(":common")
//			compileOnly "com.zjft.microservice:zj-orchestration-core:${zjInfrastructureVersion}"

			// mybatis
			implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMybatisVersion}"
		}
	}

	if (it.name.endsWith("-client")) {
		dependencies {
			// client 依赖同名 api
			compile project(":$project.parent.name:$project.parent.name-api")
//			compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
		}
	}
	if (it.name.endsWith("-impl")) {
		dependencies {
			// impl 依赖同名 api
			compile project(":$project.parent.name:$project.parent.name-api")
//			compile "com.zjft.microservice:zj-orchestration-core:${zjInfrastructureVersion}"
//			annotationProcessor "com.zjft.microservice:zj-orchestration-core:${zjInfrastructureVersion}"
		}
	}
	
}

//根项目
dependencies {
	compile project(":common")
	compile project(":user-center:user-center-impl")
	
//	testImplementation "junit:junit:${junitVersion}"
	
}

test {
	useJUnitPlatform()
}
